$WW,1$* Clean-up $LK,"FileNameAbs",A="MN:FileNameAbs"$().

* Get rid of having two terms and pick one, "Disk" and "BlkDev"?  I don't think so.  (Probably not.)

* God said this is bad.  $LK,"FL:::/Adam/DolDoc/DocFind.CPP,41"$

* $LK,"ChkDsk",A="MN:ChkDsk"$ alloc unalloced.

* Entering a '$$' in text entry

* Clean-up ASCII-127 delete.
* $LK,"StrPrintJoin",A="MN:StrPrintJoin"$(st); With st="\n\\";

* 1/1/2015 Bug messing-up keyboard, like no CTRL key.  Was working on Sprites.

* 1/?/2015 Macro select in Menu did not go to shell.

* Real World User Issues:
  QEMU runs maximized, but slow.
  If you move cursor off of bottom, macros don't work.
  Stutters in QEMU doing sound.

* $LK,"BMPRLE4To",A="MN:BMPRLE4To"$() has files_size too big by 108.

* Why is nontimer $LK,"Rand",A="MN:Rand"$() so bad?

* $LK,"FL:::/Adam/Gr/SpriteEd.CPP,789"$ Resize bitmap?

* More $LK,"CCtrl",A="MN:CCtrl"$.

* Add change-triangle-color to mesh editor.

* Add AVL binary tree support or red/black whatever that is.  We have fixed-size stack.  Auto-balancing binary tree is very needed.  Where could we use?

* Maybe let committee decide if we want intern to make binary tree look-up using PSECT symbol addresses, so we can eliminate psect cache and wall-paper kludge.  All HolyC functions and glbl vars would have left-right for address search.

* QEMU $LK,"tS",A="MN:tS"$ real-time-clock, slow Wenceslas.

* Is "GrSetSymmetry" or "GrSymmetry" better?

* DCF_TRANSFORMATION|DCF_SYMMETRY|DCF_JUST_MIRROR -- maybe not both needed at once.

* DiskCache during FileRead. CTRL-ALT-C, $LK,"Kill",A="MN:Kill"$().  

* Help Index no mention of Symmetry in $LK,"GrLine",A="MN:GrLine"$() $LK,"GrLine3",A="MN:GrLine3"$().

* Get rid of BYTE WORD DWORD in opcode and replace with U8 U16 U32.

* 5/7/14:Something like AFSetIP.CPP caused hang, then reboot in TestSuite.
* 5/7/14:#63 Maybe, $LK,"::/Demo/Graphics/Pick3D.CPP"$ crashed in TestSuite.
* 6/8/14:After or in PageEntries2 in TestSuite crash.

* $$LK,L="FL:D:/Kernel/File.CPP"$$ instead of A=
* $$SP,B=1$$ instead of $$SP,BI=1$$
* $$CM+LE+RE is nasty

* FlatTop is torpedo, not bombs.
* BomberGolf is weird concept?

* Make a game, S.E.T.I., with radio telescope array.  Put God on air. 

* $LK,"Diff",A="MN:Diff"$() flags.

* Backward SHIFT-F3 is broken

* MOV U8 [RSP+RCX],DL

* Might want HeapLog x Cnt

* Find-and-replace text on $$PT$$ line before it.

* Compiler: Warn recurse class define?

* <CTRL-r> Text "$$" has no extents and deletes

* Exception msgs in Adam look bad

3sGCGCqCCe2G3EE2G3qDetDEFsDBDB

* $LK,"Mem32DevAlloc",A="MN:Mem32DevAlloc"$() is broken. Devices should be in free spot of E820 report.

* SPRITES in CMD Line code.

* Might want to move kernel code out of low 2Meg.  Might be faster.

* F2 Macro on TestSuite

* 4/13/14 Strut or RawHide crashed when sys_var_init_flag etc
was set during testsuite.

* PSect search all tables if not found very well.
* asm LIST NOLIST bug
* Bible ranges. 
* No way to clear +Hold entries

---------------------
$$=-CTASK_NEG_OFFSET
offset(CTask.addr)==0
Spawn(): CAlloc()
TaskFinishOff(): Free()
CSysFixedArea.adam
Looks like task_flags,locked_flags cause problems with neg offset.
---------------------

* 3/19/14: RESET during RawHide
* 2013? Wenceslas in TestSuite crashes, long time ago

* 12/26/13: Mountain in TestSuite didn't run right.  Turned yellow, did nothing.

* FAQ frontloaded

COMPILER
  * Postpone LocalVar Init until last possible moment. (in case RETURN)
  * PtrArith MUL SIZE -->QueIns(MUL)? 
  * QueRem(IC_NOP)?

* Fix return result for GrBlot, ect.

* CTRL-r transform individual elements

* Size zero files don't copy out from VMware.

* FileMgr header (scrolled out of window?)

* ATA/ATAPI ID in VMware, when not booted to CD?  I forgot.

* I use fixed-point in $LK,"Circle",A="MN:Circle"$(), $LK,"Ellipse",A="MN:Ellipse"$(), $LK,"GrRot",A="MN:GrRot"$(), $LK,"GrMulMat",A="MN:GrMulMat"$() and others.
God says I might want to change to float. 
$LK,"::/Demo/Lectures/FixedPoint.CPP"$.
$LK,"::/Demo/Lectures/FixedPointAdvanced.CPP"$.

* DOCF_DBL_DOLLARS in reindention
* # in reindention

* HexEdit with odd size, ASCII cannot be edited.

* clean-up addDev pmt

* Might want to convert some Preempt() to Cli

* $LK,"Plain",A="MN:Plain"$() might be better not saving $LK,"CH_CURSOR",A="MN:CH_CURSOR"$.

* TRANSPARENT might not work with line ROPF_DITHER

* It would be nice if $LK,"U",A="MN:U"$() NOP were better.

* unhandled exception on MP message gets overwritten by WinMgr

* Cmd to enable/disable compiler warnings

* What if we had a type for either F64 or I64, like Print -- no conversion.
* What if we had a ... that did do conversion, if we have one that doesn't.

* fix documentation problem -- remembering 0 terminator in str or not for $$DA
* GetS, crazy putkey code
* editor page formatting is FUBAR

* $LK,"gr.screen_image",A="MN:CGrGlbls"$
  >Might want to do ZOOM in U8 graphics and convert screen capture to U8
  >Might want to reverse bit order

* return vals for grrect, grblot, grputchar?
* collisions for grrect, grblot, grputchar?

* Race condition in FlatTops.CPP.Z torpedo

* {Lock|Rep}{Seg|2E=NotBr|3E=Br}{OP}{ADD}{REX}
* Virtual Box MP reboot
* Std local var names

//After Egypt possible future ideas
//$LK,"Numbers,13:33",A="BF:Numbers,13:33"$ scouts
//$LK,"Numbers,21:8",A="BF:Numbers,21:8"$ snakes

* GrEdit: Move sidebar selected elems.
	- Be careful of multipt elems.
* GrEdit: Strip origin shift cmds.

* GrEditBitMap, grabscroll? 

* extern of fun with dft arg of str?

* We kinda need a routine to return how much free memory,
so that applications can plan a big alloc.

* FileMgr bad with lots of files.  

* This $LK,"Fs->catch_except=TRUE",A="FF:::/Kernel/SrvCmd.CPP,Fs->catch_except=TRUE"$ causes problems because it
catches divide and out-of-mem.  Not sure what to do, yet.

* Make $LK,"BSPStartMP",A="MN:BSPStartMP"$() start work after boot to reset multicores.  Bonus for
freeing old task memory. (Prolly never gonna do anything about this.)

* $LK,"sys_var_init_flag",A="MN:sys_var_init_flag"$ local vars.
* sprite shift pts, ctrl pt for ellipse/polygon w,h is off when rotated.

* Window mgr needs to do DOC operations on posted messages from mouse.
Works for $LK,"IPSet",A="MN:IPSet"$(), though.

* Add local vars to sym table in $LK,"Dbg",A="MN:Dbg"$()?  (maybe)

* $LK,"Bible sized nodes",A="FF:::/Adam/DolDoc/DocRecalcB.CPP,->tag+i"$
* Mouseinstall throws exceptions, doesn't work, investigate Mouse $LK,"0x9FC30",A="FF:::/Kernel/KbdMouse/Mouse.CPP,9FC"$
* get kbd lights working.
* Might have issue with compiler exceptions and restoring lex.hash tables.
* Generates two compiler error messages for expressions in statements.
* release semaphores or break lock sema,usb_td
* Fix Mom's secondary CD-ROM, dad's primary
* pmtstr in install didn't like focus change

*$FG,2$U0 Main()
{
  U0 (*fp_old_draw_input_ptr)(CDC *dc,I64 x,I64 y)=gr.fp_draw_input_ptr;
}$FG$

* What about local variable array/struct initialization.

* Demo $LK,"ToHtml",A="MN:ToHtml"$().

* Del short name in FAT32--currently I do not check to see if I have generated
a unique short name and one can delete multiple files accidentally.
Generating unique short names is a pain in the ass because you have to scan
the whole directory.  I think I just truncate the name instead of
"Program~1" or whatever.  S081130-0001.BMP crashed windows--two identical
short names.

* OVERSTRIKE at cmd line with menu macro.

* $FG,2$lock{}$FG$ warning on invalid modes.
* Local array vars-->reg.
* $LK,"DCF_SYMMETRY",A="MN:DCF_SYMMETRY"$, before transformation? (Currently it's after) 
* all graphics clipping -- screen y+top<0 for top<0
* Maybe convert graphics to float
* Warn unnecessary typecast
* compiler F32
* preempt(OFF) during graphic clipping?
* compiler optimization heap_glbls with added offset
* Might make FAT32 read in contiguous chunks.
* make Clamp(),Min(),Max() asm routines.
* Might make CSprite flood fill operate on a separate bitmap
and blotted at the end.
* autofile popup of popup
* <CTRL-r> delete subsprite in menu near others
* consider changing domenu so a real <ESC> on menu item doesn't select
(<SPACE> sends <ESC> followed by <SPACE> or something)
* puts3 with depth buf?  might not do this
* make task queins and querem safe for multicore cycling through tasks (fwd).
* make better heapwalk, do something with _CFG_HEAP_DBG.
* log to file--would be inefficient--load-in whole file, modify and write out.
Useful, but not very efficient  (TempleOS file system has no grow-file ability.
Created when FAT patent was an issue and wanted absly nothing people could sue
me for.)
* APIC2
* import intel datasheets, somehow?
* Get better dictionary, good spell checker.
* AutoComplete/Man Jmp for user code.
* Might make DskView show drive colors.
* Might do utility to set drive colors, making a tree entry in Adam 3 using
registry-like routines... or registry I guess.

* New Editor widgets

* Make use of flag potential in SysFilesFind and possibly CFileAccess
* implement fixed pos files

* new HolyC language features
* better debugging

* Too much preemption turned off?
* Look for mem leaks.
* Move stuff out of Kernel module.

* $LK,"ROP_XOR",A="MN:ROP_XOR"$ with pen_width>1 is broken.
* RGB wrong in BMP files.

* use width and height in line clipping for pen_width>1 or blot.
* SIMD transformation
* test removable media id  (critical for resident files)

* add field overflow U8 "t='*'"
* Implement fmt codes into Get
* Date Input
* Default date fmt

* 16 bit Unassembly is bad--very low priority
* more signed int disassembly
* support r4u8 by adding 0x40 byte
* static var off of data heap.
* Might want to use U32*U32 multiplication.
* could add "const" to not set LF_NOT_CONST flag for trig, etc.
* do r,rm ICCmp like ICBrCmp
* could make glblvar imports use TY_RIP_DISP32.
* PUSH_CMP allocs reg R9 or whatever
* Might be problem with NOP in OPT pass1 for NO_PUSH in expressions besides
assignments.  Is ShiftNoPush fully implemented?
* NOP1 might need to have diff ic_data's
* in divequal, it assumes about ebx
* error/warning line nums
* ASM branch out warning of range off by 1 line--use lx->last_line_num

* Switch statement with sparse cases (low priority)
* maybe inline functions?
* Use of more floating-point stk?

* More aggressive in this routine $LK,"CmpF2PushPop",A="MN:CmpF2PushPop"$() with types besides MOV and F64. 
* !dbl ~dbl
* &=, |= can overflow with Bts Btr on small data types

* num lock comes on with break key
* sort options for findfiles
* Maybe, get rid of $LK,"0x20000",A="FF:::/Compiler/CMain.CPP,0x20000"$ in compiler.


$LK,"Hosea,6:6",A="BF:Hosea,6:6"$

$LK,"Hebrews,13:15",A="BF:Hebrews,13:15"$

$LK,"Psalms,50:14",A="BF:Psalms,50:14"$



>lspci -v



/*****************************************************************************/
$WW,1$This is the transcript of a radio conversation of a US naval ship with Canadian authorities off the coast of Newfoundland in October, 1995. Radio conversation released by the Chief of Naval Operations 10-10-95.

                Americans: Please divert your course 15 degrees to the North to avoid a Collision.

                Canadians: Recommend you divert YOUR course 15 degrees to the South to avoid a collision.

                Americans: This is the Captain of a US Navy ship. I say again, divert YOUR course.

                Canadians: No. I say again, you divert YOUR course.

                Americans: This is the aircraft carrier USS Lincoln, the second largest ship in the United States' Atlantic fleet. We are accompanied by three destroyers, three cruisers and numerous support vessels. I demand that YOU change your course 15 degrees north, that's one five degrees north, or countermeasures will be undertaken to ensure the safety of this ship.

                Canadians: This is a lighthouse. Your call.[2]
$WW,0$/*****************************************************************************/



/*****************************************************************************/
char *words[10000]; //Single word list.  No statistical weights allowed.
int i=0;

while (true) {  
  while (!keyboard_hit())
    i++;
  printf("%s ",words[i%10000]);
}
/*****************************************************************************/


Size:$TX,"17784 KB",D="DD_TEMPLEOSCD_K_SIZE"$

/************************** $TX,"Perfect Coin Toss",HTML="http://hackaday.com/2014/12/19/nist-randomness-beacon/"$ ********************************/
$TX,"NIST Randomness Beacon",HTML="http://www.nist.gov/itl/csd/ct/nist_beacon.cfm"$ is a government certified random number.  You can call
the caretaker on that page, Rene Peralta 301-975-8702, $TX,"rene.peralta@nist.gov",HTML="mailto:rene.peralta@nist.gov"$.
Once every minute, they have a random lottery and post the results to their
site.  You can go back and check old lottery numbers, by entering link+time.
$TX,"https:/beacon.nist.gov/rest/record/1415440980",HTML="https:/beacon.nist.gov/rest/record/1415440980"$
$TX,"https:/beacon.nist.gov/rest/record/1415445300",HTML="https:/beacon.nist.gov/rest/record/1415445300"$	To check old numbers, enter
$TX,"https:/beacon.nist.gov/rest/record/1415529600",HTML="https:/beacon.nist.gov/rest/record/1415529600"$	Unix timestamp in the the URL.
$TX,"https:/beacon.nist.gov/rest/record/1415531580",HTML="https:/beacon.nist.gov/rest/record/1415531580"$	(Seconds since 1-JAN-1970)
$TX,"https:/beacon.nist.gov/rest/record/1415563680",HTML="https:/beacon.nist.gov/rest/record/1415563680"$	$TX,"Unix Timestamp Tool",HTML="http://www.epochconverter.com"$
$TX,"https:/beacon.nist.gov/rest/record/1415565600",HTML="https:/beacon.nist.gov/rest/record/1415565600"$
$TX,"https:/beacon.nist.gov/rest/record/1415566560",HTML="https:/beacon.nist.gov/rest/record/1415566560"$	They chain the numbers so they
$TX,"https:/beacon.nist.gov/rest/record/1415568120",HTML="https:/beacon.nist.gov/rest/record/1415568120"$	cannot be tampered with.
/*****************************************************************************/

Cop tying shoe:  (After drive-by shooting, God said kid was not innocent, LOL.)
$HC,"<img src=\"https://goodtimestories.files.wordpress.com/2013/04/cop-tying-shoe-cambridge-county-pd.jpg\" width=\"480\" height=\"376\" alt=\"\">"$

$TX,"WWW.OSDEV.ORG",HTML="http://www.osdev.org"$
$TX,"Perfect Coin Toss",HTML="http://hackaday.com/2014/12/19/nist-randomness-beacon/"$
$TX,"Top 100 Movies",HTML="http://www.afi.com/100years/movies10.aspx"$
$TX,"Dr. David Pheanis",HTML="https://webapp4.asu.edu/directory/person/77201"$
$TX,"KeyPeele#1",HTML="http://www.youtube.com/watch?v=Dd7FixvoKBw"$
$TX,"KeyPeele#2",HTML="http://www.youtube.com/watch?v=VHG_Gv_zLY4"$
$TX,"ThePrisoner",HTML="http://www.youtube.com/watch?v=HRPDO63rI1E"$
$TX,"WestWorld",HTML="http://www.youtube.com/watch?v=LcL3eP0Hfy4"$
$TX,"Picard:FourLights",HTML="http://www.youtube.com/watch?v=o_eSwq1ewsU"$
$TX,"Dwight:NerdTorture",HTML="http://www.noob.us/humor/the-office-dwight-faces-nerd-torture-of-the-highest-form"$
$TX,"AliG:Homosapiens",HTML="http://www.youtube.com/watch?v=eB5VXJXxnNU&t=2m20s"$
$TX,"Dumb Guards",HTML="http://www.youtube.com/watch?v=OdKa9bXVinE"$
$TX,"Mapping the Commodore 64",HTML="http://unusedino.de/ec64/technical/project64/mapping_c64.html"$
Holy Grail: Lmq5PxHpLNw  1:28:27
$TX,"ATA/ATAPI Spec",HTML="http://www.t13.org/Documents/UploadedDocuments/docs2007/D1532v1r4b-AT_Attachment_with_Packet_Interface_-_7_Volume_1.pdf"$
$TX,"BBC",HTML="http://www.knpr.org/"$
$TX,"BBC_Five_Live",HTML="http://www.bbc.co.uk/radio/player/bbc_radio_five_live"$
$TX,"KNPR",HTML="http://www.knpr.org/"$
$TX,"C64 Users Guide",HTML="http://www.commodore.ca/manuals/c64_users_guide/c64-users_guide.htm"$
$TX,"C64 Programmers Reference Guide",HTML="http://www.commodore.ca/manuals/c64_programmers_reference/c64-programmers_reference.htm"$


1) Strings, Opcode in Compiler
2) FizzBuzz
3) Negative displacements
4) Multicore
5) Preempt
6) Graphics
