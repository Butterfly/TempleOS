$WW,1$$FG,5$$TX+CX,"The Temple Operating System"$$FG,0$
$FG,4$
$LK,"Download Operating System",A="FI:~/Web/DownloadOS.DD"$		$LK,"App Store",A="FI:~/Web/AppStore.DD"$

$LK,"Screen Shots",A="FI:~/Web/ScrnShots.DD"$				$LK,"Instructional Videos",A="FI:~/Web/TOSVideos.DD"$

$LK,"Introduction",A="FI:::/Doc/Welcome.DD"$				$LK,"F.A.Q.",A="FI:::/Doc/FAQ.DD"$

$LK,"Features",A="FI:::/Doc/Features.DD"$				$LK,"The Charter",A="FI:::/Doc/Charter.DD"$

$LK,"Source Code By File",A="FF:~/Web/LineRep.DD,KStart16.HC"$			$TX,"Source Code (Raw)",HTML="http://www.templeos.org/Wb/"$

$TX,"Source Code By Sym",HTML="http://www.templeos.org/Wb/Home/Web/SymsAlpha.html"$			$TX,"Source Code By Address",HTML="http://www.templeos.org/Wb/Home/Web/SymsAddress.html"$
	
$LK,"Change Log",A="FI:::/Doc/ChangeLog.DD"$				$LK,"History of TempleOS",A="FI:~/Web/History.DD"$

$LK,"TempleOS Credits",A="FI:::/Doc/Credits.DD"$			$LK,"Terry Davis",A="FI:~/Web/TAD/TAD.DD"$	$LK,"Dianna Cowern",A="FI:~/Web/DLC/DLC.DD"$
$FG$
The Brits are moving to $TX,"ban \"hacking tools\"",HTML="http://www.theregister.co.uk/2008/01/02/hacker_toll_ban_guidance"$.  Take my $LK,"unassembler",A="MN:Ui"$ from my cold dead hands.  NRA is for guns; IRA is for computers.

$HC,"<object width=\"640\" height=\"520\"><param name=\"movie\" value=\"http://www.youtube.com/v/A_hzz2XSAaI\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://www.youtube.com/v/A_hzz2XSAaI\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" width=\"640\" height=\"520\"></embed></object>"$

TempleOS is a free, public domain, open source, $FG,4$$TX,"x86_64",HTML="http://en.wikipedia.org/wiki/Amd64#AMD64"$$FG$, non-preemptive multi-tasking, multi-cored, $FG,4$$TX,"ring-0-only",HTML="http://en.wikipedia.org/wiki/Ring_(computer_security)"$$FG$, single-address-map ($FG,4$$TX,"identity-mapped",HTML="http://en.wikipedia.org/wiki/Identity_(mathematics)"$$FG$), non-networked, PC operating system.  Paging is, basically, not used.

The CIA encourages code obsfucation.  They make it more complicated than necessary.  TempleOS is, literally, more simple than necessary.  It is obnoxiously simple... to the point it hurts. 

This $TX,"\"Hello World\" joke",HTML="http://www.infiltec.com/j-h-wrld.htm"$, the $TX,"BMP file format",HTML="http://en.wikipedia.org/wiki/BMP_file_format"$ and the $TX,"WAV file format",HTML="http://en.wikipedia.org/wiki/WAV"$ show that the industry is really screwed-up!  That's what TempleOS fixes.  I capped the line-of-code count at 100,000 and God said it must be perfect, so it will never be an ugly monstrocity.  It is currently $TX,"81,304",D="DD_TEMPLEOS_LOC_OFFICIAL"$ lines of unblemished code.  Backward compatibility is not promised.

Normally, failure is not an option, but since TempleOS accompanies Windows or Linux, we exclude certain uses.  There is no reason to duplicate browsing, multimedia, desktop publishing, etc.  Linux wants to be a secure, multi-user mainframe.  That's why it has file permissions.  The vision for TempleOS, however, is a modern, 64-bit Commodore 64.  The C64 was a non-networked, home computer mostly used for games.  It trained my generation how to program because it was wide open, completely hackable.  The games were not multimedia works of art, but generated by non-artist.

A troll might ask, "Why not just use $FG,4$$TX,"DOS",HTML="http://en.wikipedia.org/wiki/DOS"$$FG$?  It was ring-0-only and single-address-map."  $FG,4$$TX,"DOS",HTML="http://en.wikipedia.org/wiki/DOS"$$FG$ was 16-bit, with segmentation -- awful!  TempleOS is 64-bit, flat, non-segmented and multi-cored.  It has a C64-like shell with $LK,"HolyC",A="FI:::/Doc/HolyC.DD"$, a dialect of C/C++, instead of BASIC.  It was written from scratch, and not even ASCII was sacred -- it has 8-bit unsigned char source code to support European languages.  Also, the source code supports binary sprite graphics.

A troll might say, "It can crash!"  We used $FG,4$$TX,"DOS",HTML="http://en.wikipedia.org/wiki/DOS"$$FG$ for years and loved it. Computers even had a reset switch!  Just think of the power of ring-0, muhahaha! Think of the speed and simplicity of $FG,4$$TX,"ring-0-only",HTML="http://en.wikipedia.org/wiki/Ring_(computer_security)"$$FG$ and $FG,4$$TX,"identity-mapping",HTML="http://en.wikipedia.org/wiki/Identity_(mathematics)"$$FG$.  It can change tasks in half a microsecond because it doesn't mess with page tables or privilege levels.  Inter-process communication is effortless because every task can access every other task's memory.

It's fun having access to everything.  When I was a teenager, I had a book, $FG,4$$TX,"Mapping the Commodore 64",HTML="http://unusedino.de/ec64/technical/project64/mapping_c64.html"$$FG$, that told what every location in memory did.  I liked copying the ROM to RAM and poking around at the ROM BASIC's variables.  Everybody directly poked the hardware ports.

TempleOS is simpler than Linux and you can have hours of fun tinkering because all memory and ports are accessible.  Memory is $FG,4$$TX,"identity-mapped",HTML="http://en.wikipedia.org/wiki/Identity_(mathematics)"$$FG$ at all times, so you can modify any task's memory from any other task.  You can access all disk blocks, too.  I had a blast using a C64 disk block editor to modify directories to un-delete files, when I was a kid.  Maybe, you want to play with a raw-block database, or make your own file system?

$HC,"<object width=\"640\" height=\"520\"><param name=\"movie\" value=\"http://www.youtube.com/v/AIEJjpVlZu0\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://www.youtube.com/v/AIEJjpVlZu0\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" width=\"640\" height=\"520\"></embed></object>"$

$HC,"<object width=\"640\" height=\"520\"><param name=\"movie\" value=\"http://www.youtube.com/v/W_b4zMxfLvA\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\"http://www.youtube.com/v/W_b4zMxfLvA\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" width=\"640\" height=\"520\"></embed></object>"$

I wrote all $LK,"120,646",A="FF:~/Web/LineRep.DD,Kernel.PRJ",D="DD_TEMPLEOS_LOC"$ lines of TempleOS over the last $TX,"13.3",D="DD_TEMPLEOS_AGE"$ years, full-time, including the 64-bit compiler.  It was called, at various times, "$FG,4$$TX,"Hoppy",HTML="http://web.archive.org/web/*/http://www.simstructure.hare.com/*"$$FG$", "$FG,4$$TX,"The J Operating System",HTML="http://wayback.archive.org/web/*/http://www.justrighteous.org/*"$$FG$", "$FG,4$$TX,"LoseThos",HTML="http://web.archive.org/web/*/http://www.losethos.com/*"$$FG$" and "$FG,4$$TX,"SparrowOS",HTML="http://web.archive.org/web/*/http://www.sparrowos.com/*"$$FG$".  Here are my $FG,4$$TX,"college transcripts",HTML="http://www.templeos.org/files/ASU_Transcripts.pdf"$$FG$.  I've been a professional operating system developer since 1990 when I was hired to work on Ticketmaster's VAX OS.

$FG,8$
* "Commodore 64" is a trademark owned by Polabe Holding NV.
* "Linux" is a trademark owned by Linus Torvalds.
* "Windows" and "DOS" are trademarks owned by MicroSoft Corp.
